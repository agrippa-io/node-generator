import { Logger } from '@agrippa-io/node-utils'
import { mongoose } from '@agrippa-io/node-mongoose'
import { ExpressRequestMongooseUtil, UseCaseExecutor } from '@agrippa-io/node-mongoose'
import express from 'express'
import MODEL from '../../constants/models'
import Interface{{ pascalCase model }}Doc from '../../models/{{ pascalCase model }}/interfaces/document'
import {{ pascalCase model }}PatchOne from '../../usecases/{{ pascalCase model }}/patch.resource.mongoose'

export default async (request: express.Request, response: express.Response) => {
  Logger.route('PATCH /v3/{{ snakeCase model }}s/:id')
  const {
    params: { id },
  } = request

  const queryBuilder: ExpressRequestMongooseUtil<Interface{{ pascalCase model }}Doc> =
    new ExpressRequestMongooseUtil<Interface{{ pascalCase model }}Doc>(request)

  const filterQuery: mongoose.FilterQuery<Interface{{ pascalCase model }}Doc> = { _id: id }
  const updateQuery: mongoose.UpdateQuery<Interface{{ pascalCase model }}Doc> = queryBuilder.bodyUpdateQuery()

  const patch{{ pascalCase model }}: {{ pascalCase model }}PatchOne = new {{ pascalCase model }}PatchOne({
    options: {},
    filterQuery,
    updateQuery,
  })

  await patch{{ pascalCase model }}.perform()

  await UseCaseExecutor.renderUseCase(patch{{ pascalCase model }}, request, response, {
    rootModel: MODEL.{{ constantCase model }},
  })
}
