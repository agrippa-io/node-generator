import { Logger } from '@agrippa-io/node-utils'
import { mongoose } from '@agrippa-io/node-mongoose'
import { ExpressRequestMongooseUtil, UseCaseExecutor } from '@agrippa-io/node-mongoose'
import express from 'express'
import MODEL from '../../constants/models'
import {{ pascalCase model }}ReadMany from '../../usecases/{{ pascalCase model }}/get.list.mongoose'
import InterfaceMongooseModel{{ pascalCase model }} from '../../models/{{ pascalCase model }}/interfaces/document'

export default async (request : express.Request, response : express.Response) => {
  Logger.route('GET /v3/{{ snakeCase model }}s')
  const queryBuilder : ExpressRequestMongooseUtil<InterfaceMongooseModel{{ pascalCase model }}> =
  new ExpressRequestMongooseUtil<InterfaceMongooseModel{{ pascalCase model }}>(request)
  const query : mongoose.FilterQuery<InterfaceMongooseModel{{ pascalCase model }}> = queryBuilder.queryFilterQuery()

  const read{{ pascalCase model }} = new {{ pascalCase model }}ReadMany({
    query,
    options: {}
  })

  await read{{ pascalCase model }}.perform()

  UseCaseExecutor.renderUseCase(read{{ pascalCase model }}, request, response, {
    rootModel: MODEL.{{ constantCase model }}
  })
}
